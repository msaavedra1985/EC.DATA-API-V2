Directiva funcional (sin código) para implementar PK UUID v7 + human_id scoped + public_code opaco:

Objetivo

Evitar enumeración pública y mantener operatividad humana.

Exponer public_code; usar UUID v7 para relaciones; conservar human_id para tareas internas/soporte.

Alcance

Aplicar a entidades visibles: users, organizations, sites, invoices, orders, tickets (no a tablas puente/logs).

Campos por entidad

id (UUID v7): clave primaria interna; usado en FKs/joins.

org_id (si aplica): referencia a la organización.

human_id (incremental por organización): número corto, solo interno/soporte.

public_code (string opaco): ID público visible en UI y comunicaciones.

Reglas de generación

UUID v7 (id)

Se genera en la capa de aplicación al crear el registro.

Todas las FKs apuntan a id. Nunca derivar nada de este valor.

human_id incremental con scope

Scope = (org_id) → secuencia por organización.

Garantizar UNIQUE(org_id, human_id).

Uso: backoffice, planillas internas, depuración rápida.

public_code opaco y reversible en backend

Composición: PREFIX_ORG + ENCODE(human_id) + CHECKSUM.

PREFIX_ORG: slug/código corto de la organización (p.ej. ACME).

ENCODE(human_id):

Opción A (recomendada): Hashids/Base62 con SALT secreta (almacenada en KMS/ENV).

Opción B (solo dígitos): permutación reversible (esquema tipo Feistel) sobre human_id.

CHECKSUM: dígito/verificador (Luhn/Verhoeff) para detectar errores de tipeo.

Ejemplo visual: ACME-7K9D2-X (Base62) o ACME-482731-4 (numérico).

Ciclo de vida (crear/leer)

Create:

Generar id (UUID v7).

Asignar human_id siguiente dentro de org_id.

Calcular public_code = PREFIX_ORG + ENCODE(human_id) + CHECKSUM.

Persistir los tres campos.

Read/Lookup:

Entradas públicas (API/UI): aceptar solo public_code.

Decodificar a human_id (y validar org_id si aplica).

Resolver internamente por id (consulta final).

Entradas internas/admin: permitir búsqueda por human_id + org_id.

Comportamiento de API

Endpoints públicos: parámetros y respuestas usan public_code.

Endpoints internos/admin: pueden usar human_id (requiere también org_id) o id.

Nunca aceptar human_id solo en endpoints públicos.

Respuestas: incluir siempre public_code; human_id solo en endpoints de soporte/admin.

Seguridad y robustez

SALT del encoder en KMS/ENV, rotación planificada.

Prefijo de org validado contra org_id para evitar confusiones cross-tenant.

Checksum obligatorio: si falla, rechazar 400 con mensaje genérico.

Rate limiting y logs para intentos de enumeración.

Paginación: cursor basada en created_at,id o id, no en human_id.

Migraciones/compatibilidad

Si existen registros:

Backfill de human_id por (org_id) respetando orden de creación.

Generar public_code para todos los existentes.

Mantener campos legacy solo lectura hasta deprecarlos.

Operación/soporte

En comunicaciones con usuarios: solicitar/mostrar public_code.

En tareas manuales internas: usar human_id (junto a org_id) para rapidez.

Herramienta interna: input public_code → decodifica y muestra id, org_id, human_id.

Testing (criterios de aceptación)

Crear N registros en una misma org: human_id avanza secuencial y public_code no muestra patrón lineal.

Decodificación public_code → human_id correcta; checksum invalida entradas con errores.

Búsqueda pública solo por public_code; búsqueda interna por human_id+org_id y por id.

Rotación de SALT (opcional): nuevos public_code válidos; los viejos siguen resolviendo si se mantiene compatibilidad.